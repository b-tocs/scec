#version: "3"

services:

  traefik:
    image: traefik:latest
    command:
      #- "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.mqtt.address=:1883"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_ADMIN_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.dashboard.service=api@internal"
    depends_on:
      - mosquitto
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "1883:1883"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-letsencrypt:/letsencrypt"


  mosquitto:
    image: eclipse-mosquitto:latest
    env_file:
      - .env
    restart: always
    expose:
      - 1883
    volumes:
      - mosquitto-data:/mosquitto
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt.entrypoints=mqtt"
      - "traefik.tcp.services.mqtt.loadbalancer.server.port=1883"
      

  nodered:
    image: nodered/node-red:latest
    environment:
      - TZ=${NODERED_TIMEZONE}
    expose:
      - 1880
    volumes:
      - node-red-data:/data  
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodered-http.rule=Host(`nodered.${DOMAIN_NAME}`)"
      - "traefik.http.routers.nodered-http.entrypoints=web"
      - "traefik.http.routers.nodered-http.middlewares=nodered-https"
      - "traefik.http.middlewares.nodered-https.redirectscheme.scheme=https"
      - "traefik.http.routers.nodered.rule=Host(`nodered.${DOMAIN_NAME}`)"
      - "traefik.http.routers.nodered.entrypoints=websecure"
      - "traefik.http.routers.nodered.tls.certresolver=myresolver"
      - "traefik.http.services.nodered.loadbalancer.server.port=1880"

  sapcc:
    image: ghcr.io/b-tocs/btocs_sapcc:latest
    restart: unless-stopped
    networks:
      - default   
    expose:
      - "8443"
    volumes:
      - sapcc-config:/opt/sap/scc/config
      - sapcc-scc-config:/opt/sap/scc/scc_config
      - sapcc-logs:/opt/sap/scc/log
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sapcc-http.rule=Host(`sapcc.${DOMAIN_NAME}`)"
      - "traefik.http.routers.sapcc-http.entrypoints=web"
      - "traefik.http.routers.sapcc-http.middlewares=sapcc-https"
      - "traefik.http.middlewares.sapcc-https.redirectscheme.scheme=https"
      - "traefik.http.routers.sapcc.rule=Host(`sapcc.${DOMAIN_NAME}`)"
      - "traefik.http.routers.sapcc.entrypoints=websecure"
      - "traefik.http.routers.sapcc.tls.certresolver=myresolver"
      - "traefik.http.services.sapcc.loadbalancer.server.port=8443"

volumes:
  mosquitto-data:
  node-red-data:
  traefik-letsencrypt:
  sapcc-config:
  sapcc-scc-config:
  sapcc-logs:
