services:
  mosquitto:
    image: eclipse-mosquitto:latest
    env_file:
      - .env
    restart: always
    expose:
      - 1883
    ports:
      - "1883:1883"
    volumes:
      - mosquitto-data:/mosquitto
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      
  nodered:
    image: nodered/node-red:latest
    environment:
      - TZ=Europe/Amsterdam
    expose:
      - 1880
    ports:
      - "1880:1880"
    volumes:
      - node-red-data:/data  
  sapcc:
    image: ghcr.io/b-tocs/btocs_sapcc:latest
    restart: unless-stopped
    networks:
      - default   
    expose:
      - "8443"
    ports:
      - "8443:8443"
    volumes:
      - sapcc-config:/opt/sap/scc/config
      - sapcc-scc-config:/opt/sap/scc/scc_config
      - sapcc-logs:/opt/sap/scc/log

  influxdb:
    image: influxdb:latest
    entrypoint: ["./entrypoint.sh"]
    restart: unless-stopped
    expose:
      - 8086
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: secret-admin-token-scec   # Initial admin token for the user
      DOCKER_INFLUXDB_INIT_USERNAME: scec                        # Initial username for the user
      DOCKER_INFLUXDB_INIT_PASSWORD: administrator                # Initial password for the user
      DOCKER_INFLUXDB_INIT_ORG: scec                              # Initial organization name
      DOCKER_INFLUXDB_INIT_BUCKET: nodered                        # Initial bucket name 
      #DOCKER_INFLUXDB_INIT_RETENTION: 1w
    volumes:
      - influxdb-storage:/var/lib/influxdb2:rw
      - influxdb-config:/etc/influxdb2

  zookeeper:
    image: bitnami/zookeeper:latest
    restart: unless-stopped
    expose:
      - "2181"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper
 
  kafka:
    image: bitnami/kafka:latest
    restart: unless-stopped
    expose:
      - "9092"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true  # Kafka will automatically create topics if needed.
    volumes:
      - kafka-zk-data:/bitnami/kafka
    depends_on:
      - zookeeper


  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   expose:
  #     - "9092"
  #     - "9093"
  #   restart: unless-stopped
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"
  #   environment:
  #     KAFKA_KRAFT_MODE: "true"  # This enables KRaft mode in Kafka.
  #     KAFKA_PROCESS_ROLES: controller,broker  # Kafka acts as both broker and controller.
  #     KAFKA_NODE_ID: 1  # A unique ID for this Kafka instance.
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"  # Defines the controller voters.
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_LOG_DIRS: /var/lib/kafka/data  # Where Kafka stores its logs.
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Kafka will automatically create topics if needed.
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Since weâ€™re running one broker, one replica is enough.
  #     KAFKA_LOG_RETENTION_HOURS: 168  # Keep logs for 7 days.
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No delay for consumer rebalancing.
  #     CLUSTER_ID: "SCEC-KAFKA"  # A unique ID for the Kafka cluster.
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - kafka-data:/var/lib/kafka/data  # Store Kafka logs on your local machine.



  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    expose:
      - 8080
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      DYNAMIC_CONFIG_PATH: /etc/kafkaui/dynamic_config.yaml
      CONFIG_RELATED_UPLOADS_DIR: /etc/kafkaui/uploads
      #KAFKA_CLUSTERS_0_NAME: "SCEC-KAFKA"
      #KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      #SERVER_SERVLET_CONTEXT_PATH: /kafka-ui  
    depends_on:
      - kafka
    volumes:
      - kafka-ui-data:/etc/kafkaui
      - ./kafka/config.yaml:/etc/kafkaui/dynamic_config.yaml

volumes:
  mosquitto-data:
  node-red-data:
  sapcc-config:
  sapcc-scc-config:
  sapcc-logs:
  kafka-data: 
  kafka-ui-data:
  influxdb-storage:
  influxdb-config:
  zookeeper-data:
  kafka-zk-data: 
